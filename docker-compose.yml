version: '3.7'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.debian
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app/:/usr/src/app/
    ports:
      - 81:8000
    env_file:
      - ./config/.env.dev
    depends_on:
      - webdb
    user: ${CURRENT_UID}
  api:
    build:
      context: ./cohorts_proj
      dockerfile: Dockerfile.debian
      args: 
        DEV_USER_ID: ${DEV_UID}
        DEV_GROUP_ID: ${DEV_UID}
    command: python manage.py runserver 0.0.0.0:8887
    volumes:
      - ./cohorts_proj/:/usr/src/app/
    ports:
      - 8887:8887
      - 7778:7778  # Jupyter notebook
    env_file:
      - ./config/.env-api.dev
    depends_on:
      - apidb
    user: ${CURRENT_UID}
  webdb:
    image: postgres:12.0-alpine
    volumes:
      - web_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django_dev
      - POSTGRES_HOST_AUTH_METHOD=trust
    command:
      -p 5432
  apidb:
    image: postgres:12.0-alpine
    volumes:
      - api_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django_dev
      - POSTGRES_HOST_AUTH_METHOD=trust
    # Modifying the port here, requires changes on config/.env... files
    command:
      -p 5433

volumes:
  web_data:
  api_data:
